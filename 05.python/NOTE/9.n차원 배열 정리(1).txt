#numpy 패키지를 이용한 n차원 배열
-import numpy as np
-np.arange(5)>> 0~4까지 1씩 증가하는 1차원 배열
-np.arange(15).reshape()>>3행 5열짜리 배열

-배열 변수의 타입:type
-배열 변수 요소들의 타입:dtype
-배열 변수 한 요소의 byte size:itemsize
-배열의 차원수:n.dim
-배열의 구조:shape
-배열의 구조 변경:reshape

##array()함수로 numpy 배열 만들기
-np.array([2,4,6],dtype=np.int16) -기본 타입은 int32
-np.array([(1.5,2.7),(2,3])>>2*2 배열
-np.array([[1.5,2.7],[2,3]])>>2*2 배열
>>>np.array([1,2,3,4],dtype=np.float32).reshape(2,2)

#astype 이용하기
astype("int32") vs astype(np.int64)

#d>2*3 배열
###[1 2 3]### 
###[4 5 6]###
-------------------------------------------
>>for a,i in enumerate(d):
	print("{}행:{}".format(a,i)
>>0행:[1 2 3]>>d[0,:]
>>1행:[4 5 6]>>d[1,:]
-------------------------------------------
for a,i in enumerate(d):
    for b,j in enumerate(i):
        print("{}행 {}열 :{}".format(a,b,j))
>>0행 0열:1
>>0행 1열:2	
>>0행 2열:3	
>>1행 0열:4	
>>1행 1열:5	
>>1행 2열:6

###깊은 복사####
c=np.array([[1,2],[3,4]],dtype=np.int32) >>주소가 a
d=np.array(c,copy=True, dtype=np.int16)>>주소가 b
d[0,0] = 999
>>d만 0행 0열이 999로 바뀜

# copy=False이더라도 dtype이 바뀌면 깊은 복사
c=np.array([[1,2],[3,4]],dtype=np.int32)
d=np.array(c,copy=False, dtype=np.int16)

##기본값이 있는 배열
------------------------------------
np.zeros(tuple) : 요소들이 다 0.0>>>np.zeros((3,5))
np.ones(tuple) : 요소들이 다 1.0>>>np.ones((2,5))
np.empty(tuple) : 초기 내용은 임의값인 배열(메모리 상태에 따라 달라짐)
이렇게 생성된 배열은 기본 dtype이 float64. dtype 속성을 따로 지정할 수 있음
----------------------------------------------------------------------------------------

###연속된 값을 갖는 배열 만들기
np.arange(0,2,0.3)>>array([0. , 0.3, 0.6, 0.9, 1.2, 1.5, 1.8])

from numpy import linspace
linspace(0,2,20).reshape(4,5)>>0~2까지 20개 숫자들을 n차원 배열을 만듬

# 0~1인 실수 난수발생 (2행3열 배열)
t=np.random.random((2,3))
np.floor(t*10)>>정수만 출력
a.ravel()>>>>차원이 풀린 배열을 반환(a가 바뀌는 것은 아님)

b=array([[9., 6.],[4., 3.],[3., 7.]])

# -1은 자동 계산 (b는 그대로)
>>b.reshape(-1, 3)
>>>array([[9., 6., 4.],
       [3., 3., 7.]])

#resize는 -1은 불가

# 로또번호 6개(1~45)를 구해서 sort하여 1차원 배열에 넣고 출력하기
# 1부터 45사이의 정수 난수 6개 배열
>np.floor(np.random.random(6)*45)+1

######로또 알고리즘######
while True:
    a = np.floor(np.random.random(6)*45)+1
    a = [int(x) for x in a]
    if len(set(a)) == 6:
        a.sort()
        print(a)
        break;