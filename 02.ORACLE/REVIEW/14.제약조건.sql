-- ★ ★ 제약조건
-- (1) PRIMARY KEY : 유일하게 테이블의 각 행을 식별
-- (2) NOT NULL    : NULL값을 포함하지 않음
-- (3) UNIQUE  : 모든 행에 대해 유일해야. NULL값을 허용
-- (4) FOREIGN KEY : 테이블의 열은 다른 테이블의 열을 참조
-- (5) CHECK(조건) : 해당 조건이 만족.
-- (6) DEFAULT : 기본값 설정 (해당 열의 데이터 입력이 없으면 NULL)
DROP TABLE DEPT1;
CREATE TABLE DEPT1(
  DEPTNO NUMBER(2) PRIMARY KEY,
  DNAME  VARCHAR2(14) UNIQUE,
  LOC    VARCHAR2(13) NOT NULL
);
DROP TABLE DEPT1;
CREATE TABLE DEPT1(
  DEPTNO NUMBER(2),
  DNAME VARCHAR2(14),
  LOC VARCHAR2(13) NOT NULL,
  PRIMARY KEY(DEPTNO),
  UNIQUE(DNAME));
  
CREATE TABLE EMP1(
  EMPNO NUMBER(4) PRIMARY KEY,
  ENAME VARCHAR2(10) NOT NULL,
  JOB   VARCHAR2(9)  NOT NULL,
  MGR   NUMBER(4),
  HIREDATE DATE DEFAULT SYSDATE,
  SAL   NUMBER(7,2) CHECK (SAL>0),
  COMM  NUMBER(7,2),
  DEPTNO NUMBER(2) REFERENCES DEPT1(DEPTNO) );
DROP TABLE DEPT1;--EMP1을 참조하는 테이블이라 삭제가 안됨 EMP1 삭제하고 가능함 
DROP TABLE EMP1;

CREATE TABLE EMP1(
  EMPNO NUMBER(4),
  ENAME VARCHAR2(10) NOT NULL,
  JOB   VARCHAR2(9) NOT NULL,
  MGR   NUMBER(4),
  HIREDATE DATE DEFAULT SYSDATE,
  SAL   NUMBER(7,2),
  COMM  NUMBER(7,2),
  DEPTNO NUMBER(2),
  PRIMARY KEY(EMPNO),
  CHECK(SAL>0),
  FOREIGN KEY(DEPTNO) REFERENCES DEPT1(DEPTNO));

INSERT INTO DEPT1 SELECT * FROM DEPT;
SELECT * FROM DEPT1;
INSERT INTO DEPT1(DEPTNO,DNAME,LOC) VALUES (50,'IT','MAPO');
INSERT INTO DEPT1 VALUES (60,'PLANNING','MAPO');
INSERT INTO DEPT1 VALUES (60,NULL,'AAA');--프라이머리 키떄문에
INSERT INTO DEPT1 VALUES (70,NULL,'AAA');
INSERT INTO DEPT1 VALUES (80,'MAA',NULL);--NOT NULL
INSERT INTO DEPT1 VALUES (80,'PLANNING','SEOUL');--UNIQUE

-------------------------------------------------
SELECT * FROM EMP1;
INSERT INTO EMP1(EMPNO,ENAME,JOB,DEPTNO) VALUES (1002,'PARK','MANAGER',60);--HIREDATE는 초기화상태로 현재 날짜로!
INSERT INTO EMP1 (EMPNO,JOB,DEPTNO) VALUES (1003,'MANAGER',40);--ENAME NOT NULL!!
INSERT INTO EMP1 (EMPNO,ENAME,JOB,SAL,DEPTNO) VALUES (1004,'YUN','MANAGER',0,30);--CHEECK 제약 조건
SELECT * FROM DEPT1;
INSERT INTO EMP1 (EMPNO,ENAME,JOB,DEPTNO) VALUES (1005,'YI','MANAGER',80); --DEPT1에 80이 없음
INSERT INTO EMP1 (EMPNO,ENAME,JOB,DEPTNO) VALUES (1005,'YI','MANAGER',70); --DEPT1에 70 오케이!-외래키 제약조건

DROP TABLE BOOK;
DROP TABLE BOOKCATEGORY;
DROP TABLE BOOKCATEGORY CASCADE CONSTRAINTS; -- 참조하는 테이블과 상관없이 DROP

CREATE TABLE BOOKCATEGORY(
    categoryCODE NUMBER(3),
    categoryName VARCHAR2(20),
    OFFICE_LOC VARCHAR2(50) NOT NULL,
    PRIMARY KEY(categoryCODE),
    UNIQUE(categoryName));
--------------------위 아래 같은 것-----------
CREATE TABLE BOOKCATEGORY(
    categoryCODE NUMBER(3) PRIMARY KEY,
    categoryName VARCHAR2(20) UNIQUE,
    OFFICE_LOC VARCHAR2(50) NOT NULL);
INSERT INTO BOOKCATEGORY VALUES (100, '철학','3층 인문실');
INSERT INTO BOOKCATEGORY VALUES (200, '인문','3층 인문실');
INSERT INTO BOOKCATEGORY VALUES (300, '자연과학','3층 과학실');
INSERT INTO BOOKCATEGORY VALUES (400, 'IT','4층 과학실');
SELECT * FROM BOOKCATEGORY;

CREATE TABLE BOOK(
  categoryCODE NUMBER(3) NOT NULL,
  bookNO VARCHAR2(20),
  bookNAME VARCHAR2(100),
  PUBLISHER VARCHAR2(100),
  PUBYEAR NUMBER(4) DEFAULT EXTRACT(YEAR FROM SYSDATE),
  PRIMARY KEY(BOOKNO),
  FOREIGN KEY(categoryCODE) REFERENCES BOOKCATEGORY(categoryCODE));
SELECT * FROM BOOK;
---------------------위 아래 같은 것------------------------------
CREATE TABLE BOOK(
  categoryCODE NUMBER(3) REFERENCES BOOKCATEGORY(categoryCODE) NOT NULL,
  BOOKNO VARCHAR2(20) PRIMARY KEY,
  BOOKNAME VARCHAR2(100),
  PUBLISHER VARCHAR2(100),
  PUBYEAR NUMBER(4) DEFAULT TO_NUMBER(TO_CHAR(SYSDATE,'YYYY')) );

INSERT INTO BOOK (categoryCODE,BOOKNO,  BOOKNAME, PUBLISHER)
  VALUES (100,'100A01','철학자의 삶','더존출판');
INSERT INTO BOOK VALUES (400,'400A01','이것은 DB다','더존출판',2018);
INSERT INTO BOOK VALUES (900,'400A02','이것은 DB다','더존출판',2018); --외래키 참조 에러
INSERT INTO BOOK VALUES (NULL,'400B01','아무책','아무출판',2020); --NOT NULL
INSERT INTO BOOK VALUES (300,'400A01','아무책','아무출판',2020); --프라이머리 키
SELECT * FROM BOOK;

--EQUAL JOIN
SELECT B.*, categoryNAME, OFFICE_LOC
  FROM BOOK B, BOOKCATEGORY C
  WHERE B.categoryCODE = C.categoryCODE;

-- MAJOR & STUDENT
DROP TABLE STUDENT;
DROP TABLE MAJOR;
CREATE TABLE MAJOR(
    MAJOR_CODE NUMBER(2) PRIMARY KEY,
    MAJOR_NAME VARCHAR2(50) UNIQUE,
    MAJOR_OFFICE_LOC VARCHAR2(255) NOT NULL);
CREATE TABLE STUDENT(
    STUDENT_CODE VARCHAR2(10) PRIMARY KEY,
    STUDENT_NAME VARCHAR2(50) NOT NULL,
    SCORE NUMBER(3) CHECK (SCORE BETWEEN 0 AND 100),
    MAJOR_CODE NUMBER(2) REFERENCES MAJOR(MAJOR_CODE) );
DROP TABLE STUDENT;
DROP TABLE MAJOR;

CREATE TABLE MAJOR(
    MAJOR_CODE NUMBER(2),
    MAJOR_NAME VARCHAR2(50),
    MAJOR_OFFICE_LOC VARCHAR2(255) NOT NULL,
    PRIMARY KEY(MAJOR_CODE),
    UNIQUE(MAJOR_NAME));
    
CREATE TABLE STUDENT(
    STUDENT_CODE VARCHAR2(10),
    STUDENT_NAME VARCHAR2(50) NOT NULL,
    SCORE NUMBER(3),
    MAJOR_CODE NUMBER(2),
    PRIMARY KEY(STUDENT_CODE),
    CHECK (SCORE>=0 AND SCORE<=100),
    FOREIGN KEY(MAJOR_CODE) REFERENCES MAJOR(MAJOR_CODE));
INSERT INTO MAJOR VALUES (1, '경영정보','경영관 305호');
INSERT INTO MAJOR VALUES (2, '소프트웨어공학','정보관 808호');
INSERT INTO MAJOR VALUES (3, '디자인','예술관 606호');
INSERT INTO MAJOR VALUES (4, '경제','경상관 202호');
SELECT * FROM MAJOR;
INSERT INTO STUDENT VALUES ('A01','김길동',100, 1);
INSERT INTO STUDENT VALUES ('A02','문길동',90, 2);
INSERT INTO STUDENT VALUES ('A02','홍길동',95, 3);--프라이머리 키
INSERT INTO STUDENT VALUES ('A03','홍길동',95, 3);
INSERT INTO STUDENT VALUES ('B03','신길동',200, 3); -- CHECK 제약조건
INSERT INTO STUDENT VALUES (NULL,'신길동',90, 3);  -- PRIMARY KEY 제약조건=(NOT NULL+UNIQUE)
SELECT S.*, MAJOR_NAME FROM STUDENT S, MAJOR M WHERE S.MAJOR_CODE=M.MAJOR_CODE;
COMMIT;
