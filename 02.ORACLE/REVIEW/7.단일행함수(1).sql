--REVIEW
SELECT * FROM EMP;
SELECT * FROM DEPT;
SELECT * FROM SALGRADE;
-- CROSS JOIN,EQUAL JOIN,NOT EQUAL JOIN,SELF JOIN,OUTER JOIN
-- CROSS JOIN>>그냥 조건 없이  테이블 연결
--EQUAL JOIN >>공통된 조건 아래  테이블 연결
--NOT EQUAL JOIN >>공통되지 않는 조건 아래  테이블 연결
--SELE JOIN>>같은 테이블을 연결 
--OUTER JOIN>>생략된 행이 나오도록 합쳐진 테이블

--직원 이름,부서번호,부서명,부서위치(40번 누락되어있음)-EQUAL
SELECT ENAME,D.DEPTNO,DNAME,LOC FROM EMP E,DEPT D WHERE E.DEPTNO=D.DEPTNO;
--직원 이름,부서번호,부서명,부서위치(40번 나오게)-OUTER,EQUAL
SELECT ENAME,D.DEPTNO,DNAME,LOC FROM EMP E,DEPT D WHERE E.DEPTNO(+)=D.DEPTNO;
--직원 이름,부서번호,부서명,등급,상사이름 -EQUAL,NOT EQUAL,OUTER,SELF-상사이름 없는 사람도...
SELECT W.ENAME,D.DEPTNO,DNAME,GRADE,M.ENAME FROM EMP W,EMP M,SALGRADE,DEPT D
                                        WHERE W.MGR=M.EMPNO(+) AND D.DEPTNO=W.DEPTNO
                                        AND W.SAL BETWEEN LOSAL AND HISAL;
--사원이름,대리이름,과장이름,부장이름
SELECT A.ENAME 사원,B.ENAME 대리,C.ENAME 과장,D.ENAME 부장 FROM EMP A,EMP B,EMP C,EMP D
                                        WHERE A.MGR=B.EMPNO(+) AND B.MGR=C.EMPNO(+)
                                        AND C.MGR=D.EMPNO(+);
---------------------------------내장함수,단일행 함수------------------------------
--단일행 함수 >>오직 단일 행에서만 적용가능,행별로 하나의 결과를 리턴
--문자, 숫자, 날짜 형 변환 함수 등
SELECT ENAME 직원,TO_CHAR(HIREDATE,'YYYY/MM/DD') 입사일 FROM EMP;
SELECT ENAME "변경전 이름",REPLACE(ENAME,'SMITH','SMISS')"변경 후 이름" FROM EMP;

--그룹함수>>여러개의 행을 조작하여 행의 그룹당 하나의 결과를 리턴
SELECT SUM(SAL) FROM EMP; --OUTPUT 1행
SELECT DEPTNO,SUM(SAL) FROM EMP GROUP BY DEPTNO; --부서별 월급의 합

--DUAL 테이블
--주로 연산,함수적용내용 확인 시 활용,산술연산결과를 한줄로 얻기 위해 오라클에서 제공하는 테이블
DESC DUAL;
SELECT * FROM DUAL; -->>듀얼 테이블은 더미라는 단 하나의 칼럼에 X라는 단하나의 ROW만을 저장하고 있음
SELECT 12*4 FROM DUAL;
SELECT 12*4 FROM EMP;
SELECT 12*4 FROM DEPT;
SELECT 12*4 FROM SALGRADE;

--1.숫자 함수
--ABS,COS,EXP,FLOOR,LOG,POWER(M,N),SIGN(N) 음수면 -1,0이면 0,양수면 1
--SIN,TAN,ROUND,TRUNC,MOD(X,N) X를 N으로 나눈 나머지
SELECT -10,ABS(-10) FROM DUAL;
SELECT SAL,ABS(-SAL) FROM EMP;
SELECT 34.4678,FLOOR(34.6678) FROM DUAL;--소숫점 다 버림
SELECT 34.4678,CEIL(34.6678) FROM DUAL;--소숫점 다버리고 일의자리 1 올림
SELECT 34.5678,ROUND(34.5678) FROM DUAL;--35
SELECT 34.5678,ROUND(34.5678,2) FROM DUAL; --34.57
SELECT 34.5678,ROUND(34.5678,3) FROM DUAL; --34.568
SELECT 34.55,ROUND(34.55,1) FROM DUAL; --34.6
SELECT 34.55,ROUND(34.55,-1) FROM DUAL; --30
SELECT 341.55,ROUND(341.55,-2) FROM DUAL; --300
SELECT 1234.23,ROUND(1234.23,-3) FROM DUAL; --1000

-- 2.문자 처리 함수 
SELECT LOWER('LOVE') FROM DUAL;--소문자로
SELECT UPPER('love') FROM DUAL;--대문자로
SELECT INITCAP('CHAPPINESS') FROM DUAL; --앞에만 대문자로
SELECT CONCAT('LOVE',' IS POWER') FROM DUAL;
SELECT SUBSTR('LOVE',1,3) FROM DUAL; --첫번째부터 세번째까지
SELECT SUBSTR('ABCDE',3,5) FROM DUAL;
SELECT SUBSTR('이건한',1,2) FROM DUAL; --한글은 2BYTE
SELECT LENGTH('CHAPPINESS') FROM DUAL; --문자 길이
SELECT LENGTH('이건한') FROM DUAL; --한글은 1BYTE
SELECT LENGTHB('CHAPPINESS') FROM DUAL; --한글은 3BYTE
SELECT LENGTHB('이건한') FROM DUAL; --9바이트
SELECT INSTR('BEAR','A') FROM DUAL; --글자의 원하는 부분 인덱스로 뽑아줌
--LPAD,RPAD 좌로 우로 정렬,TRIM 잘라내고 남은 문자 표현,CHR 아스키 코드값으로 출력(반대는 ASCII)
SELECT ENAME,SAL FROM EMP;
SELECT ENAME,RPAD(ENAME,10,'*') FROM EMP; --우로 정렬
SELECT ENAME,LPAD(ENAME,10,'*') FROM EMP; --좌로 정렬
SELECT SAL,RPAD(SAL,5,'*') FROM EMP;
SELECT SAL,LPAD(SAL,8,'*') FROM EMP;
SELECT ENAME,SAL FROM EMP;
SELECT ENAME,LPAD(SAL,5,'*') FROM EMP;
--REPLACE 문자열에서 특정문자를 변경
SELECT REPLACE('HE IS CUTE','HE','SHE') FROM DUAL;
--PRATICE1)
SELECT 'Welcome to Oracle',UPPER('Welcome to Oracle') FROM DUAL;
SELECT 'Welcome to Oracle',LOWER('Welcome to Oracle') FROM DUAL;
SELECT * FROM EMP;
SELECT ENAME,LOWER(ENAME),INITCAP(ENAME) FROM EMP;
SELECT EMPNO,ENAME,JOB FROM EMP WHERE LOWER(JOB)='manager';
SELECT CONCAT(CONCAT(EMPNO,ENAME),CONCAT(JOB,DEPTNO))"직원" FROM EMP;
SELECT ENAME||'의 직업은 '||JOB||'이다.' FROM EMP;
SELECT LENGTH('ORACLE'),LENGTHB('오라클') FROM DUAL; --B는 메모리를 차지하는 바이트 수
SELECT HIREDATE,SUBSTR(HIREDATE,1,2)년도,SUBSTR(HIREDATE,4,2) 월,SUBSTR(HIREDATE,7,2) 일 FROM EMP;
SELECT HIREDATE,TO_CHAR(HIREDATE,'YYYY/MM/DD') FROM EMP;

--PRATICE2)
--9월 입사한 사원
SELECT ENAME,HIREDATE FROM EMP WHERE HIREDATE LIKE '__/09/__';
SELECT ENAME,HIREDATE FROM EMP WHERE HIREDATE LIKE '%_09_%';--09월 입사
SELECT ENAME,HIREDATE FROM EMP 
                    WHERE SUBSTR(HIREDATE,4,2)='09'; --문자니깐 '09'
SELECT ENAME,HIREDATE FROM EMP WHERE TO_CHAR(HIREDATE,'DD')='09';
SELECT ENAME,HIREDATE FROM EMP WHERE HIREDATE LIKE '%09'; --9일 입사

--83년도 입사한 직원
SELECT * FROM EMP;
SELECT ENAME,HIREDATE FROM EMP WHERE TO_CHAR(HIREDATE,'YYYY')='1983';
SELECT ENAME,HIREDATE FROM EMP WHERE HIREDATE LIKE '83%';
SELECT ENAME,HIREDATE FROM EMP WHERE SUBSTR(HIREDATE,1,2)='83';

--이름이 E로 끝나는 사원,S로 끝나는 사원,A로 시작하는 사원
SELECT * FROM EMP;
SELECT ENAME FROM EMP WHERE SUBSTR(ENAME,-1,1)='E';
SELECT ENAME FROM EMP WHERE SUBSTR(ENAME,-1,1)='S';
SELECT ENAME FROM EMP WHERE SUBSTR(ENAME,1,1)='A';

--신상정보 가리고 싶을 때 SUBSTR,R/LPAD 활용
SELECT SAL FROM EMP;
SELECT SAL,RPAD(SUBSTR(SAL,1,1),5,'*') FROM EMP;
SELECT ENAME,DEPTNO,SAL FROM EMP;
SELECT RPAD(SUBSTR(ENAME,1,1),6,'*'),SAL,DEPTNO FROM EMP;

--이름의 문자열 수 만큼만 표시
SELECT * FROM EMP;
SELECT EMPNO,ENAME,JOB FROM EMP;
SELECT EMPNO,ENAME,SUBSTR(JOB,1,LENGTH(ENAME)) FROM EMP;

--날짜형 SUBSTR,LENGTH 활용
SELECT HIREDATE FROM EMP;
SELECT SUBSTR(HIREDATE,1,LENGTH(HIREDATE)) FROM EMP;
SELECT * FROM EMP WHERE SUBSTR(HIREDATE,1,2)='80';

--­	EMP 테이블에서 사원이름을 2자리만 출력되고 나머지는 *로 숨기도록 출력
SELECT RPAD(SUBSTR(ENAME,1,2),LENGTH(ENAME),'*') FROM EMP;
SELECT LPAD(SUBSTR(ENAME,-1,2),LENGTH(ENAME),'*') FROM EMP;

--1자리만 출력되고 나머지는 *로 출력
SELECT ENAME FROM EMP;
SELECT RPAD(SUBSTR(ENAME,1,1),LENGTH(ENAME),'*') FROM EMP;
SELECT ENAME,LPAD(SUBSTR(ENAME,-4,LENGTH(ENAME)-1),LENGTH(ENAME),'*') FROM EMP;

SELECT SUBSTR('CHAPPINESS',-3,2) FROM DUAL; --뒤에서 3번째 기준으로 두글자

--SUBSTRB/SUBSTR
SELECT SUBSTR('ABC',1,2) FROM DUAL; --AB
SELECT SUBSTRB('ABC',1,2) FROM DUAL; --AB 영어는 1바이트
SELECT SUBSTR('이건한',1,2) FROM DUAL; --이건
SELECT SUBSTRB('이건한',1,3) FROM DUAL; --이 한글은 2바이트

--INSTAR/INSTARB >>내가 원하는 문자가 몇번째 있는지
SELECT INSTR('CHAPPINESS','P',3) FROM DUAL;  --4
SELECT INSTRB('CHAPPINESS','P',3) FROM DUAL; --4 
SELECT INSTR('인스타그램','그',3) FROM DUAL; --4
SELECT INSTRB('인스타그램','램',4) FROM DUAL; --13
SELECT INSTR('ABABAB','A') FROM DUAL; --첨 인덱스부터  A 위치 인덱스
SELECT INSTR('ABABAB','A',2) FROM DUAL; --두번째 인덱스부터 시작해서 A 위치 인덱스
SELECT INSTR('ABABAB','A',4) FROM DUAL; --네번째 인덱스부터 시작해서 A 위치 인덱스
SELECT INSTR('ABCABCABCABC','A',2) FROM DUAL; --두번째 A
SELECT INSTR('ABCABCABCABC','A',2,2) FROM DUAL; --세번째 A
SELECT INSTR('ABCABCABCABC','A',2,3) FROM DUAL; --네번째 A

--INSTR(S1, S2, n, k) ; S1 문자열 중 n번째 문자부터 시작하여 찾고자 하는 문자열 
--S2가 k번째 나타나는 문자 위치

--PRATICE3)
--­	이름의 세 번째 자리가 R인 사원을 검색하기,끝자리도 R인 사원 
SELECT ENAME FROM EMP;
SELECT ENAME FROM EMP WHERE ENAME LIKE '__R%';
SELECT ENAME FROM EMP WHERE SUBSTR(ENAME,3,1)='R';
SELECT ENAME FROM EMP WHERE INSTR(ENAME,'R',1)=3;
SELECT ENAME FROM EMP WHERE ENAME LIKE '%R';
SELECT ENAME FROM EMP WHERE SUBSTR(ENAME,LENGTH(ENAME),1)='R';

SELECT LPAD('ORACLE',20,'#') FROM DUAL;
SELECT RPAD('ORACLE',20,'#') FROM DUAL;
SELECT LTRIM('         ORACLE') FROM DUAL; --왼쪽공백삭제
SELECT RTRIM('       ORACLE    ') FROM DUAL; --오른쪽공백삭제
SELECT TRIM('   O R A C L E  ') FROM DUAL; --공백 삭제