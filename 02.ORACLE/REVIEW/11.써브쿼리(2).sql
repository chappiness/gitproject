--REVIEW
--SELECT,JOIN(EQUAL,NOT EQUAL,SELF,OUTER),단일행함수,그룹행함수,서브쿼리
SELECT * FROM EMP;
SELECT * FROM DEPT;
SELECT * FROM SALGRADE;
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
SELECT LOC,DNAME,D.DEPTNO FROM EMP E,DEPT D WHERE E.DEPTNO=D.DEPTNO ORDER BY DEPTNO;
SELECT ENAME,SAL,GRADE FROM EMP,SALGRADE WHERE SAL BETWEEN LOSAL AND HISAL ORDER BY SAL;
SELECT W.ENAME,M.ENAME FROM EMP W,EMP M WHERE W.MGR=M.EMPNO;--W.ENAME KING의 M.ENAME이 안나옴
SELECT W.ENAME,M.ENAME FROM EMP W,EMP M WHERE W.MGR=M.EMPNO(+);
SELECT W.ENAME,M.ENAME FROM EMP W,EMP M WHERE W.MGR(+)=M.EMPNO;--말단 사원
SELECT ENAME,LOC,DNAME,D.DEPTNO FROM EMP E,DEPT D WHERE E.DEPTNO(+)=D.DEPTNO; --D.DEPTNO는 존재,E,DEPTNO 안나옴
-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
SELECT ENAME,EMPNO,HIREDATE,SAL FROM EMP;
SELECT ENAME,EMPNO,HIREDATE,SAL FROM EMP WHERE HIREDATE LIKE '82%';
SELECT ENAME,HIREDATE FROM EMP WHERE HIREDATE LIKE '__/02/__';
SELECT ENAME,HIREDATE FROM EMP WHERE HIREDATE LIKE '%12';
SELECT SYSDATE,SYSTIMESTAMP FROM DUAL;
SELECT TO_CHAR(SYSDATE,'YYYY/MM/DD DY HH:MI:SS') FROM DUAL;--숫자,날짜>>문자형
SELECT ENAME,TO_CHAR(SAL,'L999,999') FROM EMP;
SELECT TO_DATE(19930913,'YYYY/MM/DD') FROM DUAL;
SELECT ENAME,TRUNC(SYSDATE-HIREDATE) FROM EMP;
SELECT TRUNC(MONTHS_BETWEEN(SYSDATE,HIREDATE)) FROM EMP;
SELECT LAST_DAY(SYSDATE) FROM DUAL;
SELECT NEXT_DAY(SYSDATE,'수요일') FROM DUAL;
SELECT HIREDATE,EXTRACT(YEAR FROM HIREDATE),
                    EXTRACT(MONTH FROM HIREDATE),EXTRACT(DAY FROM HIREDATE) FROM EMP;--네자리 연도로 나옴
SELECT SYSTIMESTAMP,EXTRACT(YEAR FROM SYSTIMESTAMP),EXTRACT(MINUTE FROM SYSTIMESTAMP)
                    ,EXTRACT(SECOND FROM SYSTIMESTAMP) FROM DUAL;
SELECT SUBSTR('ABCABCABC',4,3),INSTR('ABCABCABCABC','A',2,2) FROM DUAL;
SELECT INITCAP('CHAPPINESS'),LOWER('CHAPPINESS'),UPPER('chappiness'),CONCAT('cha','ppiness') FROM DUAL;
----------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------
SELECT AVG(SAL),SUM(SAL),COUNT(*),SUM(COMM),AVG(COMM) FROM EMP;
SELECT DEPTNO,ROUND(AVG(SAL),2) FROM EMP GROUP BY DEPTNO ORDER BY DEPTNO;
SELECT DEPTNO,AVG(SAL) FROM EMP WHERE DEPTNO=10 GROUP BY DEPTNO;
SELECT DEPTNO,AVG(SAL) FROM EMP GROUP BY DEPTNO HAVING AVG(SAL)>1000 ORDER BY DEPTNO;
----------------------------------------------------------------------------------------
-------------------------다중행 서브쿼리--------------------------------------------------
----------------------------------------------------------------------------------------
SELECT DEPTNO FROM EMP WHERE ENAME='SMITH';
SELECT ENAME,DEPTNO FROM EMP WHERE DEPTNO=(SELECT DEPTNO FROM EMP WHERE ENAME='SMITH');

--IN 검색된 값 중에 하나만 일치하면 true

--급여가 3000 이상 받는 사원이 소속된 부서와 동일한 부서에서 근무하는 사원들의 모든 정보를 출력
--SELECT * FROM EMP WHERE DEPTNO=(SELECT DEPTNO FROM EMP WHERE SAL>=3000);--오류
SELECT * FROM EMP WHERE DEPTNO IN (SELECT DEPTNO FROM EMP WHERE SAL>=3000);

--부서별로 입사일이 가장 늦은 사람이 부서번호, 이름, 입사일을 출력하시오
SELECT DEPTNO,MAX(HIREDATE) FROM EMP GROUP BY DEPTNO;
SELECT DEPTNO,ENAME,HIREDATE FROM EMP
                        WHERE (DEPTNO,HIREDATE) IN (SELECT DEPTNO,MAX(HIREDATE) FROM EMP GROUP BY DEPTNO);

--JOB(직책별)로 가장 낮은 연봉을 받는 사람의 이름, 직책, 연봉을 출력
SELECT JOB,MIN(SAL) FROM EMP GROUP BY JOB;
SELECT ENAME,JOB,SAL FROM EMP WHERE (JOB,SAL) IN (SELECT JOB,MIN(SAL) FROM EMP GROUP BY JOB);

--ALL
--모든 검색된 값과 조건에 맞아야 true
--컬럼>ALL 가장 큰값보다 크다/컬럼<ALL 가장 작은 값보다 작다.
--30번 소속 사원들 중에서 급여를 가장 많이 받는 사원보다 더 많은 급여를 받는 사람의 이름, 급여를 출력
SELECT MAX(SAL) FROM EMP WHERE DEPTNO=30; --2850
SELECT ENAME,SAL FROM EMP WHERE SAL>(SELECT MAX(SAL) FROM EMP WHERE DEPTNO=30);
SELECT ENAME,SAL FROM EMP WHERE SAL>ALL(SELECT SAL FROM EMP WHERE DEPTNO=30);

--ANY
--검색된 값 중에 조건에 맞는 것이 하나 이상 있으면 true
--컬럼>ANY 가장 작은 값보다 크다/컬럼<ANY 가장 큰 값보다 크다
--부서번호가 30번인 사원들의 급여 중 가장 작은 값(950)보다 많은 급여를 받는 사원의 이름, 급여를 출력
SELECT MIN(SAL) FROM EMP WHERE DEPTNO=30;--950
SELECT ENAME,SAL FROM EMP WHERE SAL>ANY(SELECT (SAL) FROM EMP WHERE DEPTNO=30);
SELECT ENAME,SAL FROM EMP WHERE SAL>(SELECT MIN(SAL) FROM EMP WHERE DEPTNO=30);

--EXISTS
--SQL문에서 Exists를 사용하는 것은 어떤 조건을 만족하는 집합의 존재 여부를 확인할 경우에 사용 
--직속부하가 있는 사원의 사원번호, 이름, 급여를 출력
SELECT MGR FROM EMP;--중복되어있네
SELECT EMPNO,ENAME,SAL FROM EMP WHERE EMPNO IN(SELECT MGR FROM EMP);--중복X
SELECT EMPNO,ENAME,SAL FROM EMP M WHERE EXISTS (SELECT * FROM EMP WHERE MGR=M.EMPNO);

--부서별로 가장 급여를 많이 받는 사원의 정보(사원 번호, 사원이름, 급여, 부서번호)를 출력
SELECT DEPTNO,MAX(SAL) FROM EMP GROUP BY DEPTNO;
SELECT EMPNO,ENAME,SAL,DEPTNO FROM EMP WHERE (DEPTNO,SAL) IN(SELECT DEPTNO,MAX(SAL) FROM EMP GROUP BY DEPTNO); 

--직급(JOB)이 MANAGER인 사람의 속한 부서의 부서 번호와 부서명과 지역을 출력
SELECT DEPTNO FROM EMP WHERE JOB='MANAGER';
SELECT DEPTNO,DNAME,LOC FROM DEPT D WHERE DEPTNO IN(SELECT DEPTNO FROM EMP WHERE JOB='MANAGER'); 
            
--연봉이 3000이상인 사람들 중 연봉 등급을 나누어서 해당 등급별 최고 연봉을 받는 사람들의 사번,
--이름, 직업, 입사일, 급여, 급여등급을 출력
SELECT MAX(SAL),GRADE FROM EMP,SALGRADE WHERE SAL BETWEEN LOSAL AND HISAL AND SAL>=3000 GROUP BY GRADE;
SELECT ENAME,JOB,HIREDATE,SAL,GRADE FROM EMP,SALGRADE
                                WHERE (SAL,GRADE) IN(SELECT MAX(SAL),GRADE FROM EMP,SALGRADE WHERE SAL BETWEEN LOSAL AND HISAL AND SAL>=3000 GROUP BY GRADE);

--입사일 분기별로 가장 높은 연봉을 받는 사람들의 분기, 사번, 이름, JOB, 상사사번, 입사일, 급여, 상여를 출력
SELECT CEIL(TO_CHAR(HIREDATE,'MM')/3) 분기,MAX(SAL) FROM EMP
                            GROUP BY CEIL(TO_CHAR(HIREDATE,'MM')/3); --무조건 올림(cf 무조건 버림 CEIL)
SELECT HIREDATE,EXTRACT(MONTH FROM HIREDATE),CEIL(EXTRACT(MONTH FROM HIREDATE)/3) FROM EMP;
SELECT EXTRACT(MONTH FROM SYSDATE) FROM DUAL;
SELECT CEIL(TO_CHAR(HIREDATE,'MM')/3),EMPNO,ENAME,JOB,EMPNO,HIREDATE,SAL,COMM FROM EMP
        WHERE (CEIL(TO_CHAR(HIREDATE,'MM')/3),SAL) IN(SELECT CEIL(TO_CHAR(HIREDATE,'MM')/3) 분기,MAX(SAL) FROM EMP
                            GROUP BY CEIL(TO_CHAR(HIREDATE,'MM')/3));

--SALESMAN 모든 사원들 보다 급여를 많이 받는 사원들의 이름과 급여와 직급(담당 업무)를 출력하되 영업 사원은 출력하지 않는다
SELECT MAX(SAL) FROM EMP WHERE JOB='SALESMAN';
SELECT JOB FROM EMP;
SELECT ENAME,SAL,JOB FROM EMP WHERE SAL>(SELECT MAX(SAL) FROM EMP WHERE JOB='SALESMAN') AND JOB!='SALESMAN';
SELECT ENAME,SAL,JOB FROM EMP WHERE SAL>ALL(SELECT SAL FROM EMP WHERE JOB='SALESMAN');

--SALESMAN 일부 어떤 한 사원보다 급여를 많이 받는 사원들의 이름과 급여와 직급(담당 업무)를 출력하되 영업 사원도 출력
SELECT MIN(SAL) FROM EMP WHERE JOB='SALESMAN';
SELECT ENAME,SAL,JOB FROM EMP WHERE SAL>(SELECT MIN(SAL) FROM EMP WHERE JOB='SALESMAN');
SELECT ENAME,SAL,JOB FROM EMP WHERE SAL>ANY(SELECT SAL FROM EMP WHERE JOB='SALESMAN');
--연봉이 3000미만인 사람 중에 가장 최근에 입사한 사람의 사원번호와 이름, 연봉, 입사일을 출력
SELECT MAX(HIREDATE) FROM EMP WHERE SAL<3000;
SELECT EMPNO,ENAME,SAL*12+NVL(COMM,0) FROM EMP WHERE HIREDATE=(SELECT MAX(HIREDATE) FROM EMP WHERE SAL<3000);

--직급이 ‘SALESMAN’인 사원이 받는 급여의 최소 급여보다 많이 받는 사원들의 이름, 급여,
--직급, 부서번호를 출력하되 부서번호가 20번인 사원은 제외한다
SELECT MIN(SAL) FROM EMP WHERE JOB='SALESMAN';
SELECT ENAME,SAL,JOB,DEPTNO FROM EMP WHERE SAL>(SELECT MIN(SAL) FROM EMP WHERE JOB='SALESMAN') AND DEPTNO!=20;
--연습문제---
1. 사원테이블에서 가장 먼저 입사한 사람의 이름, 급여, 입사일
SELECT ENAME,SAL,HIREDATE FROM EMP WHERE HIREDATE=(SELECT MIN(HIREDATE) FROM EMP);
-- 2. 회사에서 가장 급여가 적은 사람의 이름, 급여
SELECT ENAME,SAL FROM EMP WHERE SAL=(SELECT MIN(SAL) FROM EMP);
-- 3. 회사 평균보다 급여를 많이 받는 사람의 이름, 급여, 부서코드
SELECT ENAME,SAL,DEPTNO FROM EMP WHERE SAL>(SELECT AVG(SAL) FROM EMP);
--4. 회사 평균 이하의 급여를 받는 사람의 이름, 급여, 부서명
SELECT ENAME,SAL,DNAME FROM DEPT D,EMP E WHERE E.DEPTNO=D.DEPTNO
                                AND SAL<(SELECT AVG(SAL) FROM EMP);
--5. SCOTT보다 먼저 입사한 사람의 이름, 급여, 입사일, 급여 등급
SELECT HIREDATE FROM EMP WHERE ENAME='SCOTT';
SELECT ENAME,SAL,HIREDATE,GRADE FROM SALGRADE,EMP WHERE SAL BETWEEN LOSAL AND HISAL AND
                                        HIREDATE<(SELECT HIREDATE FROM EMP WHERE ENAME='SCOTT');
--6. 5번(SCOTT보다 먼저 입사한 사람의 이름, 급여, 입사일, 급여 등급)에 부서명 추가하고 급여가 큰 순 정렬
SELECT HIREDATE FROM EMP WHERE ENAME='SCOTT';
SELECT ENAME,SAL,HIREDATE,GRADE,DNAME FROM EMP E,DEPT D,SALGRADE WHERE E.DEPTNO=D.DEPTNO
                                        AND SAL BETWEEN LOSAL AND HISAL
                                        AND HIREDATE<(SELECT HIREDATE FROM EMP WHERE ENAME='SCOTT') ORDER BY SAL DESC;
--7. BLAKE 보다 급여가 많은 사원들의 사번, 이름, 급여
SELECT SAL FROM EMP WHERE ENAME='BLAKE';
SELECT EMPNO,ENAME,SAL FROM EMP WHERE SAL>(SELECT SAL FROM EMP WHERE ENAME='BLAKE');
--8. MILLER보다 늦게 입사한 사원의 사번, 이름, 입사일
SELECT EMPNO,ENAME,HIREDATE FROM EMP WHERE HIREDATE>(SELECT HIREDATE FROM EMP WHERE ENAME='MILLER');
--9. 사원전체 평균 급여보다 급여가 많은 사원들의 사번, 이름, 급여
SELECT EMPNO,ENAME,SAL FROM EMP WHERE SAL>(SELECT AVG(SAL) FROM EMP);
--10. CLARK와 같은 부서번호이며, 사번이 7698인 직원의 급여보다 많은 급여를 받는 사원의 사번, 이름, 급여
SELECT EMPNO,ENAME,SAL FROM EMP WHERE SAL>(SELECT SAL FROM EMP WHERE EMPNO=7698)
                                    AND DEPTNO=(SELECT DEPTNO FROM EMP WHERE ENAME='CLARK');
--11.  응용심화. CLARK와 같은 부서명이며, 사번이 7698인 직원의 급여보다 많은 급여를 받는 사원의 사번, 이름, 급여
SELECT DNAME FROM DEPT D,EMP E WHERE E.DEPTNO=D.DEPTNO AND ENAME='CLARK';
SELECT SAL FROM EMP E WHERE EMPNO=7698;
SELECT EMPNO,ENAME,SAL FROM EMP E,DEPT D WHERE E.DEPTNO=D.DEPTNO AND SAL>(SELECT SAL FROM EMP E WHERE EMPNO=7698) AND
                                    DNAME=(SELECT DNAME FROM DEPT D,EMP E WHERE E.DEPTNO=D.DEPTNO AND ENAME='CLARK');
--12. BLAKE와 같은 부서에 있는 모든 사원의 이름과 입사일자
SELECT ENAME,HIREDATE FROM EMP WHERE DEPTNO=(SELECT DEPTNO FROM EMP WHERE ENAME='BLAKE');
--13. 평균 급여 이상을 받는 모든 종업원에 대해서 사원번호와 이름 단 급여가 많은 순으로 출력)
SELECT EMPNO,ENAME,SAL FROM EMP WHERE SAL>=(SELECT AVG(SAL) FROM EMP) ORDER BY SAL DESC;

-- 여기서부터는 다중행서브쿼리와 단일행서브쿼리, 이전은 단일행서브쿼리
-- 14.  이름에 “T”가 있는 사원이 근무하는 부서에서 근무하는 모든 직원의 사원 번호,이름,급여(단 사번 순 출력)
SELECT * FROM EMP;
SELECT DEPTNO FROM EMP WHERE ENAME LIKE '%T%';
SELECT EMPNO,ENAME,SAL FROM EMP WHERE DEPTNO IN(SELECT DEPTNO FROM EMP WHERE ENAME LIKE '%T%');

-- 15. 부서 위치가 Dallas인 모든 종업원에 대해 이름,업무,급여
SELECT DEPTNO FROM DEPT WHERE LOC='DALLAS';
SELECT ENAME,JOB,SAL FROM EMP WHERE DEPTNO=(SELECT DEPTNO FROM DEPT WHERE LOC='DALLAS');

-- 16. EMP 테이블에서 King에게 보고하는 모든 사원의 이름과 급여
SELECT * FROM EMP;
SELECT EMPNO FROM EMP WHERE ENAME='KING';
SELECT ENAME,SAL FROM EMP WHERE MGR=(SELECT EMPNO FROM EMP WHERE ENAME='KING');
-- 17. SALES부서 사원의 이름, 업무
SELECT DEPTNO FROM DEPT WHERE DNAME='SALES';
SELECT ENAME,JOB FROM EMP WHERE DEPTNO=(SELECT DEPTNO FROM DEPT WHERE DNAME='SALES');
-- 18. 월급이 부서 30의 최저 월급보다 높은 사원의 모든 필드
SELECT MIN(SAL) FROM EMP WHERE DEPTNO=30;
SELECT * FROM EMP WHERE SAL>(SELECT MIN(SAL) FROM EMP WHERE DEPTNO=30) ORDER BY EMPNO;-단일
SELECT * FROM EMP WHERE SAL>ANY(SELECT SAL FROM EMP WHERE DEPTNO=30) ORDER BY EMPNO;-다중
-- 19. 부서 10에서 부서 30의 사원과 같은 업무를 맡고 있는 사원의 이름과 업무
SELECT JOB FROM EMP WHERE DEPTNO=30;
SELECT ENAME,JOB FROM EMP WHERE DEPTNO=10 AND JOB IN(SELECT JOB FROM EMP WHERE DEPTNO=30);
-- 20.  FORD와 업무도 월급도 같은 사원의 모든 필드
SELECT JOB,SAL FROM EMP WHERE ENAME='FORD';
SELECT * FROM EMP WHERE (JOB,SAL)=(SELECT JOB,SAL FROM EMP WHERE ENAME='FORD') AND ENAME!='FORD';
-- 21. 이름이 JONES인 직원의 JOB과 같거나 FORD의 SAL 이상을 받는 사원의 정보를 이름, 업무, 부서번호, 급여
    -- 단, 업무별 알파벳 순, 월급이 많은 순으로 출력
SELECT JOB FROM EMP WHERE ENAME='JONES';
SELECT SAL FROM EMP WHERE ENAME='FORD';
SELECT ENAME,JOB,DEPTNO,SAL FROM EMP WHERE JOB=(SELECT JOB FROM EMP WHERE ENAME='JONES')
                                            OR SAL=(SELECT SAL FROM EMP WHERE ENAME='FORD')
                                            ORDER BY JOB,SAL DESC;
-- 22. SCOTT 또는 WARD와 월급이 같은 사원의 정보를 이름,업무,급여
SELECT SAL FROM EMP WHERE ENAME IN('SCOTT','WARD');
SELECT ENAME,JOB,SAL FROM EMP WHERE SAL IN (SELECT SAL FROM EMP WHERE ENAME IN('SCOTT','WARD'))
                                    AND ENAME!='SCOTT' AND ENAME!='WARD';--ENAME NOT IN (SCOTT,WARD)
-- 23. CHICAGO에서 근무하는 사원과 같은 업무를 하는 사원들의 이름,업무
SELECT JOB FROM DEPT D,EMP E WHERE E.DEPTNO=D.DEPTNO AND LOC='CHICAGO';
SELECT ENAME,JOB FROM EMP WHERE JOB IN (SELECT JOB FROM DEPT D,EMP E WHERE E.DEPTNO=D.DEPTNO AND LOC='CHICAGO');
-- 24. 부서별로 월급이 평균 월급보다 높은 사원을 사번, 이름, 급여, 부서번호
SELECT AVG(SAL) FROM EMP;
SELECT EMPNO,ENAME,SAL FROM EMP E WHERE SAL>(SELECT AVG(SAL) FROM EMP WHERE DEPTNO=E.DEPTNO);
-- 25. 업무별로 평균 월급보다 적은 월급을 받는 사원을 부서번호, 이름, 급여
SELECT AVG(SAL) FROM EMP;
SELECT EMPNO,ENAME,SAL FROM EMP E WHERE SAL>(SELECT AVG(SAL) FROM EMP WHERE JOB=E.JOB);
-- 26. 적어도 한 명 이상으로부터 보고를 받을 수 있는 사원을 업무, 이름, 사번, 부서번호를 출력(단, 부서번호 순으로 오름차순 정렬)
SELECT DISTINCT M.JOB,M.ENAME,M.EMPNO,M.DEPTNO FROM EMP W,EMP M WHERE W.MGR=M.EMPNO ORDER BY DEPTNO;

SELECT JOB,ENAME,EMPNO,DEPTNO FROM EMP M
WHERE EXISTS (SELECT * FROM EMP WHERE MGR=M.EMPNO);

SELECT MGR FROM EMP;
SELECT JOB,ENAME,EMPNO,DEPTNO FROM EMP WHERE EMPNO IN(SELECT MGR FROM EMP);

-- 27.  말단 사원의 사번, 이름, 업무, 부서번호
SELECT W.EMPNO 직원,W.ENAME,W.DEPTNO,M.ENAME 상사 FROM EMP W,EMP M WHERE W.MGR(+)=M.EMPNO;
SELECT M.EMPNO,M.JOB,M.ENAME 말단사원,M.DEPTNO FROM EMP W,EMP M WHERE W.MGR(+)=M.EMPNO AND W.ENAME IS NULL;

SELECT JOB,ENAME,EMPNO,DEPTNO FROM EMP M WHERE NOT EXISTS (SELECT * FROM EMP WHERE MGR=M.EMPNO);

SELECT MGR FROM EMP WHERE NOT MGR IS NULL;
SELECT EMPNO,ENAME,JOB,DEPTNO FROM EMP WHERE EMPNO NOT IN (SELECT MGR FROM EMP WHERE NOT MGR IS NULL);