1. SQL문장 작성법
SELECT * FROM TAB; -- 현 계정(scott)이 가지고 있는 테이블
SELECT * FROM DEPT; -- DEPT 테이블에 모든 열(필드), 모든 행
SELECT * FROM EMP;  -- EMP 테이블에 모든 열(필드), 모든 행
DEPT 테이블의 구조(DEPTNO, DNAME, LOC)
DESC DEPT;

2. SQL문 실행
SELECT EMPNO AS "사번", ENAME AS "이름", SAL AS "급여", JOB AS "직책" FROM EMP; -- 별칭
SELECT EMPNO AS 사번, ENAME AS 이름, SAL AS 급여, JOB AS 직책 FROM EMP; -- 별칭
SELECT EMPNO 사번, ENAME 이름, SAL 급여, JOB 직책 FROM EMP; -- 별칭

3. 특정 행 출력  WHERE절(조건) 비교연산자 이용
비교연산은 숫자, 문자, DATE형 필드 모두 가능
SELECT EMPNO "사번", ENAME "이름", SAL "급여" FROM EMP WHERE SAL = 3000; -- 같다
SELECT EMPNO "사번", ENAME "이름", SAL "급여" FROM EMP WHERE SAL != 3000;-- 다르다
SELECT EMPNO "사번", ENAME "이름", SAL "급여" FROM EMP WHERE SAL <> 3000;-- 다르다
select empno "사번", ename "이름", sal "급여" from emp where sal ^= 3000;-- 다르다

4. 논리연산자 
81년 이전에 입사한 사원의 모든 필드
SELECT * FROM EMP WHERE HIREDATE <'81/01/01';
82년도에 입사한 사원의 모든 필드
SELECT * FROM EMP WHERE HIREDATE >= '82/01/01' AND HIREDATE <= '82/12/31';

SELECT ENAME, SAL, SAL*12 연봉 FROM EMP WHERE SAL*12 >= 24000;
이 구문에서 가장 먼저 실행되는 순서
1.FROM EMP 
2.WHERE SAL*12 >= 24000
3.SELECT ENAME, SAL, SAL*12 연봉 
따라서 별칭을 쓸때 WHERE 안에 있으면 오류가 생긴다

10번 부서에서 JOB(직책)이 MANAGER인 사람의 모든 필드
SELECT * FROM EMP WHERE DEPTNO = 10 AND JOB = 'MANAGER';
10번 부서이거나 직책이 MANAGER인 사람의 모든 필드
SELECT * FROM EMP WHERE DEPTNO = 10 OR JOB = 'MANAGER' ;

5.산술표현식
SELECT ENAME, SAL, COMM, SAL*12+COMM 연봉 FROM EMP; 
SELECT ENAME, SAL, COMM, SAL*12+NVL(COMM, 0) FROM EMP;
SAL 월급,COMM은 성과금이면 성과금이 없는경우 SELECT 하면  NULL이 나오므로
0으로 바꿔주기 위해 NVL를 사용한다!

6.연결연산자(||) : 열이나 문자를 연결
"SMITH : 1 YEAR SALARY = XXXX"과 같이 모든 행이 출력(연봉=SAL*12+COMM)
SELECT ENAME ||': 1 YEAR SALARY'='||(SAL*12+NVL(COMM,0) FROM EMP;
별칭 MSG를 붙여주면 더 이쁘게 나온다
SELECT ENAME ||': 1 YEAR SALARY'='||(SAL*12+NVL(COMM,0) MSG FROM EMP;

7.-- 7. 중복제거 (DISTINCT)
SELECT JOB FROM EMP;
SELECT DEPTNO FROM EMP;
둘 다 뽑으면 같은 직업,같은 부서번호인 사람들이 있다.
중복된 자료들을  제거시엔 이렇게 쓴다.
SELECT DISTINCT JOB FROM EMP;
SELECT DISTINCT DEPTNO FROM EMP;